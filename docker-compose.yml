services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rwanda_drone_db
    environment:
      POSTGRES_DB: rwanda_drone_community
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - drone_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rwanda_drone_app
    environment:
      # Database
      DATABASE_URL: postgresql://postgres:password@postgres:5432/rwanda_drone_community
      
      # JWT Configuration (REQUIRED - Change this in production!)
      JWT_SECRET: "your-super-secure-jwt-secret-at-least-32-characters-long-change-this-in-production"
      
      # Node Environment
      NODE_ENV: development
      
      # Security Configuration
      SESSION_SECRET: "your-super-secure-session-secret-at-least-32-characters-long-change-this-in-production"
      
      # File Upload Configuration
      MAX_FILE_SIZE: "5242880"
      ALLOWED_FILE_TYPES: "image/jpeg,image/jpg,image/png,image/gif,image/webp"
      
      # Rate Limiting Configuration
      RATE_LIMIT_WINDOW_MS: "900000"
      RATE_LIMIT_MAX_REQUESTS: "5"
      
      # CORS Configuration
      CORS_ORIGIN: "http://localhost:3000"
      
      # Cookie Configuration
      COOKIE_SAME_SITE: "strict"
      COOKIE_MAX_AGE: "604800"
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - drone_network
    volumes:
      - ./prisma:/app/prisma
      - ./public/uploads:/app/public/uploads
    command: >
      sh -c "
        npx prisma generate &&
        npx prisma db push --accept-data-loss &&
        npx prisma db seed &&
        npm run dev -- --hostname 0.0.0.0
      "

volumes:
  postgres_data:

networks:
  drone_network:
    driver: bridge 